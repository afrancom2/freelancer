:root { /* Custom properties */
    --white: #ffffff;
    --black: #212121;
    --orange: #FFC107;
    --blue: #0097A7;
    --gray: #757575;
    --ligth-gray: #B0DEFAFF;
    --font-main: 'Source Sans Pro', sans-serif;
}

html {
    font-size: 62.5%; /* Para manejar mejor los rem - 1rem = 10px */
    box-sizing: border-box;
}

*, *:before, *:after { /* Para colocarlo en todos los elementos se utiliza el asterisco */
    box-sizing: inherit;
}

body {
    font-family: var(--font-main);
    font-size: 16px; /* Para manejar mejor los rem - 1rem = 10px */
    background-image: linear-gradient(to top, var(--ligth-gray) 0%, var(--white) 100%);
}

.shade {
    -webkit-box-shadow: 0px 5px 5px 0px rgba(125, 110, 125, 1);
    -moz-box-shadow: 0px 5px 5px 0px rgba(125, 110, 125, 1);
    box-shadow: 0px 5px 5px 0px rgba(125, 110, 125, 1);
    background-color: var(--white);
    padding: 2rem;
    border-radius: 2rem;
}

h1 {
    font-size: 3.8rem;
}

h2 {
    font-size: 2.8rem;
}

h3 {
    font-size: 1.8rem;
}

h1, h2, h3 {
    text-align: center;
}

.title {
    color: var(--black); /* Uso de custom properties */
    font-weight: 600;
}

.title span { /* Selector el padre va primero y despues el hijo */
    font-size: 2rem;
}

.button {
    background-color: var(--blue);
    color: var(--white);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase; /* Texto en mayusculas */
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
}

@media (min-width: 768px) {
    .button {
        width: auto;
    }
}

.container {
    max-width: 120rem; /* toma 120 rem como maximo si se tiene el espacio disponible */
    margin: auto; /* margin sirve para agregar separación entre los elementos */
}

.nav-main-bg {
    background-color: var(--blue);
}

.nav-main {
    display: flex;
    /* Para aplicar flexbox necesito aplicarlo en el elemento padre, en este caso como
       queremos aplicarlo en los ahref nos posicionamos aca en el nav-main
       Flex es para una dimensión, tanto fila como columna, con grid es una grilla o matriz */
    flex-direction: column; /* Definir la orientación de la columna o fila por defecto es row */
    align-items: center;
}

/* 480px telefono
   768px tablet
   1140px pc
   1400px pc extendida */
@media (min-width: 768px) {
    /* Se va a ejecutar cuando la resolución maxima sea de 768px: Aplicará solo desde 0px hasta 768px
       con min-width: Aplicará a partir desde los 768px hacia adelante */
    .nav-main {
        flex-direction: row;
        justify-content: space-evenly; /* Permite distribuir el contenido horizontalmente */
    }
}

.nav-main a {
    display: block;
    color: var(--white);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    padding: 1rem; /* Es desde la separación del elemento hacia adentro, de afuera hacia adentro */
}

.nav-main a:hover { /* son subclases del elemento, en este caso el elemento a href */
    background-color: var(--orange);
    color: var(--black);
}

.section-info {
    background-image: url(../img/banner.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 400px;
    position: relative;
    margin-bottom: 2rem;
}

.section-info__container > * {
    color: var(--white);
}

.section-info__container {
    position: absolute;
    background-color: rgba(0, 0, 0, .7); /* acá se evidencia la transparencia Anterior */
    background-color: rgb(0 0 0 / 70%);
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /* Cuando este flex direction row por defecto, se alinea al centro de la pantalla  horizontal con justify content y con align items se centra al medio vertical
        */
}

.ubication {
    display: flex;
    flex-direction: row;
    align-items: inherit;
}

@media (min-width: 768px) {
    .services {
        display: grid;
        grid-template-columns: 33.3% 33.3% 33.3%; /* Se crean 3 columnas del 33.3 porciento del tamano del contenedor*/
        /*grid-template-columns: repeat(3, 1fr); Esta sintaxis es la misma que arriba 1fr es una fraccion en este caso 3 fracciones */
        column-gap: 1rem; /* para realizar una separacion de 10px entre columnas */
    }
}

.service {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.service h3 {
    color: var(--blue);
}

.service p {
    line-height: 2rem;
    text-align: center;
}

.service .icon {
    height: 10rem;
    width: 10rem;
    background-color: var(--orange);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}

